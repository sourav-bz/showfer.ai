/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Command: npx gltfjsx@6.5.0 public/models/7th_Character.gltf -o src/app/_ui/Characters/Showfer7.tsx -r public 
*/
// @ts-nocheck

import * as THREE from "three";
import React, { useEffect } from "react";
import { useGLTF } from "@react-three/drei";
import { GLTF } from "three-stdlib";

type GLTFResult = GLTF & {
  nodes: {
    ["7th_Character"]: THREE.Mesh;
  };
  materials: {
    Texture_Character: THREE.MeshStandardMaterial;
  };
  animations: GLTFAction[];
};

export default function Grennie(props) {
  const { nodes, materials } = useGLTF(
    "/models/7th_Character.gltf"
  ) as GLTFResult;

  useEffect(() => {
    if (!props.storyState) return;

    let animationFrameId;
    let talkValue = 0;

    const animateTalk = () => {
      if (props.storyState === "assistant") {
        // Toggle between 0 and 1
        talkValue = talkValue === 0 ? 1 : 0;

        nodes["7th_Character"].morphTargetInfluences[
          nodes["7th_Character"].morphTargetDictionary["Happy_Talk"]
        ] = talkValue;

        // Request next frame after a delay to control the speed of the animation
        animationFrameId = setTimeout(() => {
          requestAnimationFrame(animateTalk);
        }, 250); // Adjust this value to change the speed of the mouth movement
      }
    };

    animateTalk();

    return () => {
      if (animationFrameId) {
        clearTimeout(animationFrameId);
      }
    };
  }, [props.storyState, nodes.Body]);

  useEffect(() => {
    console.log(
      "shape keys dictionary grennie",
      nodes["7th_Character"].morphTargetDictionary
    );
    console.log(
      "shape keys influences grennie",
      nodes["7th_Character"].morphTargetInfluences
    );

    nodes["7th_Character"].morphTargetInfluences[
      nodes["7th_Character"].morphTargetDictionary["Default_Pose_2"]
    ] = 1;
  }, []);

  return (
    <group {...props} dispose={null}>
      <mesh
        name="7th_Character"
        geometry={nodes["7th_Character"].geometry}
        material={materials.Texture_Character}
        morphTargetDictionary={nodes["7th_Character"].morphTargetDictionary}
        morphTargetInfluences={nodes["7th_Character"].morphTargetInfluences}
      />
    </group>
  );
}

useGLTF.preload("/models/7th_Character.gltf");
